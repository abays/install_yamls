---
# Note make download_tools and make openstack commands run
# in https://github.com/rdo-infra/review.rdoproject.org-config/blob/master/playbooks/crc/openstack.yaml
# We can override the openstack operator image by defining openstack_img in the zuul job

- hosts: controller
  name: Deploy podified control plane
  vars:
    install_yamls_basedir: "{{ ansible_user_dir }}/src/github.com/openstack-k8s-operators/install_yamls"
  tasks:
    - name: Add crc creds
      ansible.builtin.include_role:
        name: rhol_crc
        tasks_from: add_crc_creds

    - name: Checkout to OpenStack Namespace
      ansible.builtin.command: oc project openstack
      changed_when: false

    - name: Make sure all Openstack operators are deployed
      ansible.builtin.shell: |
        set -o pipefail && oc get csv -l operators.coreos.com/openstack-operator.openstack --no-headers=true | grep -i "succeeded"
      register: operator_status
      until: operator_status.rc == 0
      changed_when: false
      retries: 30
      delay: 30

    - name: Disable the openshift-marketplace
      ansible.builtin.shell: |
        oc patch operatorhubs/cluster --type merge --patch '{"spec":{"sources":[{"disabled": true,"name": "redhat-marketplace"}]}}'
      changed_when: true

      # Note(chandan): Use default crc storage class `crc-csi-hostpath-provisioner`
    - name: Deploy OpenStack
      community.general.make:
        chdir: "{{ install_yamls_basedir }}"
        target: openstack_deploy
        params:
          OUT: "{{ install_yamls_basedir }}/out"
          STORAGE_CLASS: crc-csi-hostpath-provisioner

    - name: Make sure Nova api service is up and running
      ansible.builtin.shell: |
        oc get pods --selector service=nova-api -o jsonpath={.items[*].status.phase}
      register: nova_service
      until: nova_service.stdout == "Running"
      changed_when: false
      retries: 100
      delay: 50

    - name: List compute services and make sure they are enabled
      ansible.builtin.shell: |
        set -o pipefail && oc rsh openstackclient openstack compute service list | grep enabled
      register: nova_api_status
      until: nova_api_status.rc == 0
      changed_when: false
      retries: 50
      delay: 50

    - name: Print Pod and OpenStack resources Status
      changed_when: false
      ansible.builtin.shell: |
        oc get pv;
        oc get pods;
        oc get secrets;
        oc rsh openstackclient openstack compute service list;
        oc rsh openstackclient openstack network agent list;

    - name: Patch rabbitmq resources for lower resource consumption
      changed_when: false
      ansible.builtin.shell: |
        crname=$(oc get openstackcontrolplane -o name)
        oc patch ${crname} --type json \
          -p='[{"op": "replace", "path": "/spec/rabbitmq/templates/rabbitmq/resources/requests/cpu", "value": 500m}]'
        oc patch ${crname} --type json \
          -p='[{"op": "replace", "path": "/spec/rabbitmq/templates/rabbitmq/resources/requests/memory", "value": 500Mi}]'
        oc patch ${crname} --type json \
          -p='[{"op": "replace", "path": "/spec/rabbitmq/templates/rabbitmq-cell1/resources/requests/cpu", "value": 500m}]'
        oc patch ${crname} --type json \
          -p='[{"op": "replace", "path": "/spec/rabbitmq/templates/rabbitmq-cell1/resources/requests/memory", "value": 500Mi}]'
      tags:
        - skip_ansible_lint

    - name: Restart nova-scheduler to pick up cell1
      ansible.builtin.shell: |
        oc delete pod -l service=nova-scheduler
      changed_when: true
